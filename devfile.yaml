schemaVersion: 2.2.2
metadata:
  name: devhub-ansible
projects:
  - name: devhub-ansible-devspaces
    zip:
      location: http://devfile-registry.openshift-devspaces.svc:8080/resources/v2/ansible-devspaces-demo.zip
components:
  - name: tooling-container
    container:
      env:
        - name: ANSIBLE_COLLECTIONS_PATH
          value: ~/.ansible/collections:/usr/share/ansible/collections:/projects/ansible-devspaces-demo/collections
      image: quay.io/devspaces/ansible-creator-ee@sha256:ace90206455a3547adfef21d415899db31b222058ccfbdc36b8dcfc3cc39e692
      memoryRequest: 256M
      memoryLimit: 6Gi
      cpuRequest: 250m
      args: ['tail', '-f', '/dev/null']
commands:
  - id: oc-install
    exec:
      commandLine: /usr/local/bin/ansible-playbook ${PROJECT_SOURCE}/playbooks/install_oc.yml
      workingDir: ${PROJECT_SOURCE}
      group:
        kind: build
        isDefault: true
      component: tooling-container
  - id: molecule-create
    exec:
      label: '1.Molecule: start a test pod for the automation'
      commandLine: source $HOME/.bashrc && molecule create
      workingDir: ${PROJECTS_ROOT}/ansible-devspaces-demo/collections/ansible_collections/sample_namespace/sample_collection/extensions
      group:
        kind: run
        isDefault: true
      component: tooling-container
  - id: molecule-list
    exec:
      label: '2.Molecule: view the test instance that was created'
      commandLine: source $HOME/.bashrc && molecule list
      workingDir: ${PROJECTS_ROOT}/ansible-devspaces-demo/collections/ansible_collections/sample_namespace/sample_collection/extensions
      group:
        kind: run
        isDefault: true
      component: tooling-container
  - id: molecule-converge
    exec:
      label: '3.Molecule: apply the role to the pod'
      commandLine: source $HOME/.bashrc && molecule converge
      workingDir: ${PROJECTS_ROOT}/ansible-devspaces-demo/collections/ansible_collections/sample_namespace/sample_collection/extensions
      group:
        kind: run
        isDefault: true
      component: tooling-container
  - id: molecule-verify
    exec:
      label: '4.Molecule: run the verification against the test pod'
      commandLine: source $HOME/.bashrc && molecule verify
      workingDir: ${PROJECTS_ROOT}/ansible-devspaces-demo/collections/ansible_collections/sample_namespace/sample_collection/extensions
      group:
        kind: run
        isDefault: true
      component: tooling-container
  - id: molecule-destroy
    exec:
      label: '5.Molecule: reset the test pod back to a fresh instance'
      commandLine: source $HOME/.bashrc && molecule destroy
      workingDir: ${PROJECTS_ROOT}/ansible-devspaces-demo/collections/ansible_collections/sample_namespace/sample_collection/extensions
      group:
        kind: run
        isDefault: true
      component: tooling-container
  - id: molecule-test
    exec:
      label: '6.Molecule: run the full molecule test'
      commandLine: source $HOME/.bashrc && molecule test
      workingDir: ${PROJECTS_ROOT}/ansible-devspaces-demo/collections/ansible_collections/sample_namespace/sample_collection/extensions
      group:
        kind: run
        isDefault: true
      component: tooling-container
  - id: ansible-navigator
    exec:
      label: 'Ansible-Navigator: Start ansible-navigator'
      commandLine: |
        if [ ! -d "$HOME/.cache/ansible-navigator" ]; then
          mkdir -p "$HOME/.cache/ansible-navigator"
        fi
        cp /usr/local/lib/python3.11/site-packages/ansible_navigator/data/catalog_collections.py $HOME/.cache/ansible-navigator
        ansible-navigator --ee false
      workingDir: ${PROJECTS_ROOT}/ansible-devspaces-demo
      component: tooling-container
  - id: ansible-prereqs
    exec:
      commandLine: |
        /usr/local/bin/ansible-galaxy collection install community.hashi_vault
        /usr/bin/pip install hvac
        if [ ! -d "$PROJECT_SOURCE/.ignored" ]; then
          mkdir ${PROJECT_SOURCE}/.ignored
          cat <<EOF > ${PROJECT_SOURCE}/.ignored/env.sh
          export GITHUB_APP_APP_ID=
          export GITHUB_APP_CLIENT_ID=
          export GITHUB_APP_CLIENT_SECRET=
          export GITHUB_APP_PRIVATE_KEY_FILE=${PROJECT_SOURCE}/.ignored/private-key.pem
          export GITHUB_PRIVATE_KEY='$(< $GITHUB_APP_PRIVATE_KEY_FILE)'
          export GITHUB_ORG=github-org-name
          export GITHUB_ORG_URL=https://github.com/your-org-name-here
          export GITHUB_APP_WEBHOOK_URL=https://developer-hub-rhdh.apps.your-cluster-domain-here/
          export GITHUB_APP_WEBHOOK_SECRET=rhdh-demo123
          export QUAY_SERVER_URL=https://quay.io
          export QUAY_ORG=
          export QUAY_USER=
          export QUAY_TOKEN=
          #export RHDH_REGISTRY_PULL_SECRET=#not needed any more
          EOF
          cat <<EOF > ${PROJECT_SOURCE}/.ignored/private-key.pem
          PASTE THE CONTENT OF YOUR GITHUB APP PRIVATE KEY (PEM FILE) HERE
          EOF
        fi
      workingDir: ${PROJECT_SOURCE}
      group:
        kind: build
        isDefault: true
      component: tooling-container
  - id: tools-install
    exec:
      commandLine: '/usr/local/bin/ansible-playbook ${PROJECT_SOURCE}/ansible-automation/playbooks/install_tools.yml'
      workingDir: ${PROJECT_SOURCE}
      group:
        kind: build
        isDefault: true
      component: tooling-container
  - id: vault-setup
    exec:
      commandLine: |
        /usr/local/bin/ansible-playbook ${PROJECT_SOURCE}/ansible-automation/playbooks/vault-setup/main.yml
      workingDir: ${PROJECT_SOURCE}
      group:
        kind: build
        isDefault: true
      component: tooling-container
events:
  postStart:
    - oc-install
